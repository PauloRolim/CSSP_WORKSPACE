IMPLEMENTATION
    logic_i
REFINES
    logic
SEES
    g_types ,
    g_operators ,
    io_constants ,
    lchip_interface ,
    user_ctx ,
    inputs

    // pragma SAFETY_VARS
CONCRETE_VARIABLES
    LinearVel ,
         AngularVel ,
         prevObstacle ,
         tick

INVARIANT
    LinearVel : uint8_t &
         AngularVel : uint8_t &
         prevObstacle : uint8_t &
         tick : uint32_t

INITIALISATION
    LinearVel := IO_OFF ;
         AngularVel := IO_OFF ;
         prevObstacle := IO_OFF ;
         tick := 0
OPERATIONS
    user_logic =
    VAR obstacle , ms_tick_cycle , s_tick_cycle IN

        obstacle : ( obstacle : uint8_t ) ;

         ms_tick_cycle : ( ms_tick_cycle : uint32_t ) ;
         s_tick_cycle : ( s_tick_cycle : uint32_t ) ;
        // tick:(tick: uint32_t);

         ms_tick_cycle <-- get_ms_tick ;
         s_tick_cycle := ms_tick_cycle / delta_t1 ;
         tick := s_tick_cycle mod 2 ;

       obstacle <-- get_Obstacle ;
       prevObstacle := obstacle ;

       IF prevObstacle = IO_OFF
       THEN
           LinearVel := IO_ON
       END ;

       IF AngularVel = IO_ON THEN
           LinearVel := IO_OFF
       END ;

       IF prevObstacle = IO_ON THEN
           LinearVel := IO_OFF ;
           AngularVel := IO_ON
        END ;

       IF prevObstacle = IO_OFF THEN
           IF tick = 0 THEN
             AngularVel := IO_OFF
           END
       END

    END ;

    po <-- get_LinearVel =
        BEGIN
                po := LinearVel
        END ;

        po <-- get_AngularVel =
        BEGIN
                po := AngularVel
        END
END
