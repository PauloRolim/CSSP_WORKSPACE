THEORY ProofList IS
_f(1) & _f(2) & _f(3) & _f(4) & _f(5) & _f(26) & Operation_user_app.1,(_f(6) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(15) & _f(16) & _f(17) & _f(27) & _f(24) => _f(25));
_f(1) & _f(2) & _f(3) & _f(4) & _f(5) & Initialisation.1,(_f(6) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(15) & _f(16) & _f(17) & _f(18) & _f(19) & _f(20) & _f(21) & _f(22) & _f(23) & _f(24) => _f(25))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
((uint32_t) = (((0) .. (4294967295)))) & ((uint16_t) = (((0) .. (65535)))) & ((uint8_t) = (((0) .. (255)))) & ((STRUE) : (uint8_t)) & ((SFALSE) : (uint8_t)) & ((MAX_UINT32) : (uint32_t)) & ((MAX_UINT16) : (uint16_t)) & ((MAX_UINT8) : (uint8_t)) & ((STRUE) : (((0) .. (MAX_UINT8)))) & ((SFALSE) : (((0) .. (MAX_UINT8)))) & not(STRUE = SFALSE) & ((SBOOL) = (({STRUE}\/{SFALSE}))) & (STRUE <= 2) & (SFALSE <= 2) & ((MAX_UINT32) = (4294967295)) & ((MAX_UINT16) = (65535)) & ((MAX_UINT8) = (255)) & ((Convert_Bool) = (({((TRUE) |-> (STRUE))}\/{((FALSE) |-> (SFALSE))})));
((delta_t) : (uint32_t)) & not(((delta_t) = (0))) & ((delta_t1) : (uint32_t)) & not(((delta_t1) = (0)));
((I1$1) : (uint8_t)) & ((I2$1) : (uint8_t)) & ((I3$1) : (uint8_t)) & ((I4$1) : (uint8_t)) & ((I5$1) : (uint8_t)) & ((I6$1) : (uint8_t)) & ((I7$1) : (uint8_t)) & ((I8$1) : (uint8_t)) & ((I9$1) : (uint8_t)) & ((I10$1) : (uint8_t)) & ((O1$1) : (uint8_t)) & ((O2$1) : (uint8_t)) & ((O3$1) : (uint8_t)) & ((O4$1) : (uint8_t)) & ((O5$1) : (uint8_t)) & ((O6$1) : (uint8_t)) & ((O7$1) : (uint8_t)) & ((O8$1) : (uint8_t));
((Convert_Bool) : (((BOOL) +-> (uint8_t)))) & ((Convert_Bool) : (((BOOL) +-> (uint16_t)))) & ((Convert_Bool) : (((BOOL) +-> (uint32_t))));
((I1$2) : (uint8_t));
((I2$2) : (uint8_t));
((I3$2) : (uint8_t));
((I4$2) : (uint8_t));
((I5$2) : (uint8_t));
((I6$2) : (uint8_t));
((I7$2) : (uint8_t));
((I8$2) : (uint8_t));
((I9$2) : (uint8_t));
((I10$2) : (uint8_t));
((O1$2) : (uint8_t));
((O2$2) : (uint8_t));
((O3$2) : (uint8_t));
((O4$2) : (uint8_t));
((O5$2) : (uint8_t));
((O6$2) : (uint8_t));
((O7$2) : (uint8_t));
((O8$2) : (uint8_t));
"Refinement is correct";
((0) : (uint8_t));
((divergence_test_var$1) : (uint8_t));
not(((O1$2) = (O2$2)))
END
&
THEORY EnumerateX
END
