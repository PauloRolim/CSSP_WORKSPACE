IMPLEMENTATION
    logic_i
REFINES
    logic
SEES
    g_types ,
    g_operators ,
    io_constants ,
    lchip_interface ,
    user_ctx ,
    inputs

    // pragma SAFETY_VARS
CONCRETE_VARIABLES
    board_0_O1 ,
        board_0_O2 ,
        board_0_O3 ,
        board_0_O4 ,
        board_0_O5 ,
        board_0_O6 ,
        board_0_O7 ,
        board_0_O8
INVARIANT
    board_0_O1 : uint8_t &
        board_0_O2 : uint8_t &
        board_0_O3 : uint8_t &
        board_0_O4 : uint8_t &
        board_0_O5 : uint8_t &
        board_0_O6 : uint8_t &
        board_0_O7 : uint8_t &
        board_0_O8 : uint8_t
INITIALISATION
    board_0_O1 := IO_OFF ;
        board_0_O2 := IO_OFF ;
        board_0_O3 := IO_OFF ;
        board_0_O4 := IO_OFF ;
        board_0_O5 := IO_OFF ;
        board_0_O6 := IO_OFF ;
        board_0_O7 := IO_OFF ;
        board_0_O8 := IO_OFF
OPERATIONS
    user_logic =
    BEGIN
        VAR i1_ , i2_ , i3_ IN
            i1_ : ( i1_ : uint8_t ) ;
            i2_ : ( i2_ : uint8_t ) ;
            i3_ : ( i3_ : uint8_t ) ;

            i1_ <-- get_board_0_I1 ;
            i2_ <-- get_board_0_I2 ;
            i3_ <-- get_board_0_I3 ;

            board_0_O1 := IO_OFF ;
            board_0_O2 := IO_OFF ;
            board_0_O3 := IO_OFF ;

            IF i1_ = IO_ON THEN
              board_0_O1 := IO_ON
            ELSE
               board_0_O1 := IO_OFF
            END ;

            IF i2_ = IO_ON THEN
              board_0_O2 := IO_ON
            ELSE
               board_0_O2 := IO_OFF
            END ;

            IF i3_ = IO_ON THEN
              board_0_O3 := IO_ON
            ELSE
               board_0_O3 := IO_OFF
            END


        END
    END ;

    po <-- get_board_0_O1 =
        BEGIN
                po := board_0_O1
        END ;

        po <-- get_board_0_O2 =
        BEGIN
                po := board_0_O2
        END ;

        po <-- get_board_0_O3 =
        BEGIN
                po := board_0_O3
        END ;

        po <-- get_board_0_O4 =
        BEGIN
                po := board_0_O4
        END ;

        po <-- get_board_0_O5 =
        BEGIN
                po := board_0_O5
        END ;

        po <-- get_board_0_O6 =
        BEGIN
                po := board_0_O6
        END ;

        po <-- get_board_0_O7 =
        BEGIN
                po := board_0_O7
        END ;

        po <-- get_board_0_O8 =
        BEGIN
                po := board_0_O8
        END
END
